"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadConfig = exports.withDefaultConfig = exports.defaultConfig = void 0;
/* eslint-disable @typescript-eslint/no-var-requires */
const fs_1 = __importDefault(require("fs"));
const deepmerge_1 = require("@corex/deepmerge");
exports.defaultConfig = {
    sourceDir: '.next',
    outDir: 'public',
    priority: 0.7,
    changefreq: 'daily',
    sitemapSize: 5000,
    autoLastmod: true,
    exclude: [],
    robotsTxtOptions: {
        policies: [
            {
                userAgent: '*',
                allow: '/',
            },
        ],
        additionalSitemaps: [],
    },
};
exports.withDefaultConfig = (config) => {
    return deepmerge_1.merge([exports.defaultConfig, config], {
        arrayMergeType: 'overwrite',
    });
};
exports.loadConfig = (path) => {
    if (fs_1.default.existsSync(path)) {
        const config = require(path);
        return exports.withDefaultConfig(config);
    }
    throw new Error("No config file exist. Please create 'next-sitemap.js'");
};
