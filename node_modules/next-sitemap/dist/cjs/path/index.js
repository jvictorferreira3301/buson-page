"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.KNOWN_PATHS = exports.getRuntimePaths = exports.resolveSitemapChunks = exports.getPath = void 0;
/* eslint-disable @typescript-eslint/no-non-null-assertion */
/* eslint-disable @typescript-eslint/explicit-module-boundary-types */
const path_1 = __importDefault(require("path"));
exports.getPath = (...pathSegment) => {
    return path_1.default.resolve(process.cwd(), ...pathSegment);
};
exports.resolveSitemapChunks = (baseSitemapPath, chunks) => {
    const folder = path_1.default.dirname(baseSitemapPath);
    return chunks.map((chunk, index) => {
        const filename = `sitemap${index > 0 ? `-${index}` : ''}.xml`;
        return {
            path: `${folder}/${filename}`,
            urls: chunk,
            filename,
        };
    });
};
exports.getRuntimePaths = (config) => {
    return {
        BUILD_MANIFEST: exports.getPath(config.sourceDir, 'build-manifest.json'),
        PRERENDER_MANIFEST: exports.getPath(config.sourceDir, 'prerender-manifest.json'),
        SITEMAP_FILE: exports.getPath(config.outDir, 'sitemap.xml'),
        ROBOTS_TXT_FILE: exports.getPath(config.outDir, 'robots.txt'),
    };
};
exports.KNOWN_PATHS = {
    CONFIG_FILE: exports.getPath('next-sitemap.js'),
};
